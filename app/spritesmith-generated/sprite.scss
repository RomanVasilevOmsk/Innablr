// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$corner-green-left-image-name: 'corner-green-left-image';
$corner-green-left-image-x: 356px;
$corner-green-left-image-y: 219px;
$corner-green-left-image-offset-x: -356px;
$corner-green-left-image-offset-y: -219px;
$corner-green-left-image-width: 169px;
$corner-green-left-image-height: 458px;
$corner-green-left-image-total-width: 1720px;
$corner-green-left-image-total-height: 1160px;
$corner-green-left-image-image: '~sprite.png';
$corner-green-left-image: (356px, 219px, -356px, -219px, 169px, 458px, 1720px, 1160px, '~sprite.png', 'corner-green-left-image', );
$corner-left-green-image-name: 'corner-left-green-image';
$corner-left-green-image-x: 0px;
$corner-left-green-image-y: 837px;
$corner-left-green-image-offset-x: 0px;
$corner-left-green-image-offset-y: -837px;
$corner-left-green-image-width: 107px;
$corner-left-green-image-height: 323px;
$corner-left-green-image-total-width: 1720px;
$corner-left-green-image-total-height: 1160px;
$corner-left-green-image-image: '~sprite.png';
$corner-left-green-image: (0px, 837px, 0px, -837px, 107px, 323px, 1720px, 1160px, '~sprite.png', 'corner-left-green-image', );
$corner-left-green2-image-name: 'corner-left-green2-image';
$corner-left-green2-image-x: 525px;
$corner-left-green2-image-y: 219px;
$corner-left-green2-image-offset-x: -525px;
$corner-left-green2-image-offset-y: -219px;
$corner-left-green2-image-width: 203px;
$corner-left-green2-image-height: 265px;
$corner-left-green2-image-total-width: 1720px;
$corner-left-green2-image-total-height: 1160px;
$corner-left-green2-image-image: '~sprite.png';
$corner-left-green2-image: (525px, 219px, -525px, -219px, 203px, 265px, 1720px, 1160px, '~sprite.png', 'corner-left-green2-image', );
$corner-left-purple-image-name: 'corner-left-purple-image';
$corner-left-purple-image-x: 728px;
$corner-left-purple-image-y: 219px;
$corner-left-purple-image-offset-x: -728px;
$corner-left-purple-image-offset-y: -219px;
$corner-left-purple-image-width: 110px;
$corner-left-purple-image-height: 245px;
$corner-left-purple-image-total-width: 1720px;
$corner-left-purple-image-total-height: 1160px;
$corner-left-purple-image-image: '~sprite.png';
$corner-left-purple-image: (728px, 219px, -728px, -219px, 110px, 245px, 1720px, 1160px, '~sprite.png', 'corner-left-purple-image', );
$corner-purple-right-image-name: 'corner-purple-right-image';
$corner-purple-right-image-x: 0px;
$corner-purple-right-image-y: 219px;
$corner-purple-right-image-offset-x: 0px;
$corner-purple-right-image-offset-y: -219px;
$corner-purple-right-image-width: 356px;
$corner-purple-right-image-height: 618px;
$corner-purple-right-image-total-width: 1720px;
$corner-purple-right-image-total-height: 1160px;
$corner-purple-right-image-image: '~sprite.png';
$corner-purple-right-image: (0px, 219px, 0px, -219px, 356px, 618px, 1720px, 1160px, '~sprite.png', 'corner-purple-right-image', );
$corner-right-icon-name: 'corner-right-icon';
$corner-right-icon-x: 107px;
$corner-right-icon-y: 837px;
$corner-right-icon-offset-x: -107px;
$corner-right-icon-offset-y: -837px;
$corner-right-icon-width: 106px;
$corner-right-icon-height: 267px;
$corner-right-icon-total-width: 1720px;
$corner-right-icon-total-height: 1160px;
$corner-right-icon-image: '~sprite.png';
$corner-right-icon: (107px, 837px, -107px, -837px, 106px, 267px, 1720px, 1160px, '~sprite.png', 'corner-right-icon', );
$corner-right-purple-image-name: 'corner-right-purple-image';
$corner-right-purple-image-x: 1440px;
$corner-right-purple-image-y: 0px;
$corner-right-purple-image-offset-x: -1440px;
$corner-right-purple-image-offset-y: 0px;
$corner-right-purple-image-width: 280px;
$corner-right-purple-image-height: 705px;
$corner-right-purple-image-total-width: 1720px;
$corner-right-purple-image-total-height: 1160px;
$corner-right-purple-image-image: '~sprite.png';
$corner-right-purple-image: (1440px, 0px, -1440px, 0px, 280px, 705px, 1720px, 1160px, '~sprite.png', 'corner-right-purple-image', );
$partners-background-image-name: 'partners-background-image';
$partners-background-image-x: 0px;
$partners-background-image-y: 0px;
$partners-background-image-offset-x: 0px;
$partners-background-image-offset-y: 0px;
$partners-background-image-width: 1440px;
$partners-background-image-height: 219px;
$partners-background-image-total-width: 1720px;
$partners-background-image-total-height: 1160px;
$partners-background-image-image: '~sprite.png';
$partners-background-image: (0px, 0px, 0px, 0px, 1440px, 219px, 1720px, 1160px, '~sprite.png', 'partners-background-image', );
$spritesheet-width: 1720px;
$spritesheet-height: 1160px;
$spritesheet-image: '~sprite.png';
$spritesheet-sprites: ($corner-green-left-image, $corner-left-green-image, $corner-left-green2-image, $corner-left-purple-image, $corner-purple-right-image, $corner-right-icon, $corner-right-purple-image, $partners-background-image, );
$spritesheet: (1720px, 1160px, '~sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
